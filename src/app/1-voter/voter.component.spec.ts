import { ComponentFixture, TestBed } from '@angular/core/testing';
import { By } from '@angular/platform-browser';
import { VoterComponent } from './voter.component';

describe('VoterComponent', () => {
  let component: VoterComponent;
  let fixture: ComponentFixture<VoterComponent>;

  // To write integration tests you have to make Angular instantiate components for you
  beforeEach(() => {
    TestBed.configureTestingModule({
      declarations: [VoterComponent]
    });

    fixture = TestBed.createComponent(VoterComponent);
    component = fixture.componentInstance;
    /**
     * Fixture has
     * -  componentInstance -> returns an instance of the component
     * -  nativeElement -> returns root DOM element for this template
     * -  debugElement -> a wrapper around native element, gives some useful methods for querying the dom
     */
  });

  /** Default code generated by angular cli, calls compileComponents to compile template and style files
   * but since angular uses webpack which inlines template and style sheet files with component there is no need
   * for this added complexity
   */
  // beforeEach(async(() => {
  //   TestBed.configureTestingModule({
  //     declarations: [ VoterComponent ]
  //   })
  //   .compileComponents();
  // }));

  it('it should render total votes', () => {
    component.othersVote = 20;
    component.myVote = 1;

    fixture.detectChanges();  // run ngOnChanges after changing input manually

    let de = fixture.debugElement.query(By.css('.vote-count'));
    let el: HTMLElement = de.nativeElement;
    
    expect(el.innerText).toContain(21)
  });

  it('it should highlight the upvote button if I have upvoted', () => {
    component.myVote = 1;
    fixture.detectChanges();
    let de = fixture.debugElement.query(By.css('.glyphicon-menu-up'));
    
    expect(de.classes['highlighted']).toBeTruthy();
  });

  it('it should increase total votes when I click the upvote button', () => {
    let upvoteButton = fixture.debugElement.query(By.css('.glyphicon-menu-up'));
    upvoteButton.triggerEventHandler('click', null);
    
    expect(component.totalVotes).toBe(1);
  });
});
